<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd">
    <flow name="getAllAcountsFlow">
        <choice doc:name="Choice">
            <when expression="#[message.inboundProperties.'http.query.params'.name != null]">
                <db:select config-ref="MySQL_Configuration" doc:name="Database">
                    <db:parameterized-query><![CDATA[SELECT *
FROM flights_customers
WHERE accountType = #[message.inboundProperties.'http.query.params'.name]]]></db:parameterized-query>
                </db:select>
            </when>
            <otherwise>
                <db:select config-ref="MySQL_Configuration" doc:name="Database">
                    <db:parameterized-query><![CDATA[SELECT * FROM flights_customers]]></db:parameterized-query>
                </db:select>
            </otherwise>
        </choice>
        <dw:transform-message doc:name="Transform Message">
            <dw:input-payload doc:sample="sample_data\list_map.dwl"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload map ((payload01 , indexOfPayload01) -> {
	ID: payload01.accountID as :number,
	accountType: payload01.accountType,
	address: payload01.street ++ ", " ++ payload01.city ++ ", " ++ payload01.state,
	country: payload01.country,
	creationDate: payload01.creationDate as :string,
	firstName: (payload01.name splitBy (" "))[0],
	lastName: (payload01.name splitBy (" "))[1],
	miles: payload01.miles,
	postal: payload01.postal as :number
})]]></dw:set-payload>
        </dw:transform-message>
    </flow>
    <flow name="getAccountByID">
        <db:select config-ref="MySQL_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[SELECT * FROM flights_customers
WHERE accountID = #[message.inboundProperties.'http.uri.params'.id]]]></db:parameterized-query>
        </db:select>
        <dw:transform-message doc:name="Transform Message">
            <dw:input-payload doc:sample="sample_data\list_map.dwl"/>
            <dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
payload map ((payload01 , indexOfPayload01) -> {
	ID: payload01.accountID as :number,
	accountType: payload01.accountType,
	address: payload01.street ++ ", " ++ payload01.city ++ ", " ++ payload01.state,
	country: payload01.country,
	creationDate: payload01.creationDate as :string,
	firstName: (payload01.name splitBy (" "))[0],
	lastName: (payload01.name splitBy (" "))[1],
	miles: payload01.miles,
	postal: payload01.postal as :number
})]]></dw:set-payload>
        </dw:transform-message>
    </flow>
</mule>
